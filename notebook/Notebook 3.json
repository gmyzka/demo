{
	"name": "Notebook 3",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "Spark1",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2"
			}
		},
		"metadata": {
			"saveOutput": true,
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/ec02c21c-1506-4d1a-9f2a-44dd9c5f2359/resourceGroups/intergendemo/providers/Microsoft.Synapse/workspaces/intergendemo/bigDataPools/Spark1",
				"name": "Spark1",
				"type": "Spark",
				"endpoint": "https://intergendemo.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/Spark1",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "2.4",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28
			}
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"%%pyspark\n",
					"df = spark.sql(\"SELECT * FROM nyctaxi.passengercountstats\")\n",
					"df = df.repartition(1) # This ensure we'll get a single file during write()\n",
					"df.write.mode(\"overwrite\").csv(\"/NYCTaxi/PassengerCountStats_csvformat\")\n",
					"df.write.mode(\"overwrite\").parquet(\"/NYCTaxi/PassengerCountStats_parquetformat\")"
				],
				"execution_count": 1
			}
		]
	}
}